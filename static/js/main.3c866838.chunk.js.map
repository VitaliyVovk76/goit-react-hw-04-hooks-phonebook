{"version":3,"sources":["components/ContactsList/ContactsList.module.css","App.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","s","container","Propypes","PropTypes","node","ContactForm","onFormSubmit","useState","name","setName","number","setNumber","hendleChange","event","currentTarget","value","reset","contactForm","onSubmit","preventDefault","id","shortid","generate","formLabel","formInput","type","pattern","title","required","onChange","formButton","ContactList","contacts","onDeleteContact","contactsWrapper","map","contactButton","onClick","Filter","filterWrapper","filterLabel","filterInput","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","console","log","banToAdd","searchName","find","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","appTitle","data","alert","e","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c866838.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsWrapper\":\"ContactsList_contactsWrapper__zQvD9\",\"contactButton\":\"ContactsList_contactButton__1Qw90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appTitle\":\"App_appTitle__3A1UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2y8-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__11Vg0\",\"formLabel\":\"ContactForm_formLabel__2VWVv\",\"formInput\":\"ContactForm_formInput__13pIT\",\"formButton\":\"ContactForm_formButton__2pzc7\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.Propypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import s from \"./ContactForm.module.css\";\nimport shortid from \"shortid\";\nimport { useState } from \"react\";\n\nfunction ContactForm({ onFormSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  //записывает в state значения поля формы\n  const hendleChange = (event) => {\n    // const { name, value } = event.currentTarget;\n    switch (event.currentTarget.name) {\n      case \"name\":\n        setName(event.currentTarget.value);\n        break;\n      case \"number\":\n        setNumber(event.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n  //передает в Аpp значения полей формы\n  const hendleSubmit = (event) => {\n    event.preventDefault();\n\n    onFormSubmit({\n      name: name,\n      number: number,\n      id: shortid.generate(),\n    });\n    reset();\n  };\n  // очистка формы\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <form className={s.contactForm} onSubmit={hendleSubmit}>\n      <label className={s.formLabel}>\n        Name\n        <input\n          className={s.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={hendleChange}\n        />\n      </label>\n      <label className={s.formLabel}>\n        <span>Number</span>\n        <input\n          className={s.formInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={hendleChange}\n        />\n      </label>\n\n      <button className={s.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactsList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <div className={s.contactsWrapper}>\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={shortid.generate()}>\n          <span>{name}: </span>\n          <span>{number}</span>\n          <button\n            className={s.contactButton}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\nexport default ContactList;\n","import React from \"react\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filterWrapper}>\n    <label className={s.filterLabel}>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nexport default Filter;\n","import \"./App.css\";\nimport Container from \"./components/Container/Container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport s from \"./App.module.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  //принимает state из ContactForm, делает проверку и записывает его в state App\n  const hendleFormSbumit = (data) => {\n    const { name, number, id } = data;\n    if (banToAdd(name)) {\n      alert(`${name} is alreadi in contacts`);\n      return;\n    }\n    setContacts(() => [...contacts, { name, number, id }]);\n    console.log(\"Contacts:\", contacts);\n  };\n  //записывает значение contacts в localStorage\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    console.log(contacts);\n  }, [contacts]);\n\n  //записывает в filter значение из формы фильтра\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n  //фильтрует this.state.contacts\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  //находит одинаковые имена в this.state.contacts\n  const banToAdd = (searchName) => {\n    return contacts.find(({ name }) => name === searchName);\n  };\n  //удаляет выбранный контакт\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <Container>\n      <h1 className={s.appTitle}>Phonebook</h1>\n      <ContactForm onFormSubmit={hendleFormSbumit} />\n\n      <h2 className={s.appTitle}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__1ddlU\",\"filterLabel\":\"Filter_filterLabel__2A6uu\",\"filterInput\":\"Filter_filterInput__35HWZ\"};"],"sourceRoot":""}